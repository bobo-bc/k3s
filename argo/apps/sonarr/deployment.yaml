apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
  labels:
    app.kubernetes.io/name: sonarr
    app.kubernetes.io/instance: sonarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
      app.kubernetes.io/instance: sonarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
        app.kubernetes.io/instance: sonarr
        app.kubernetes.io/part-of: homepage
    spec:
      containers:
        - name: sonarr
          image: lscr.io/linuxserver/sonarr:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: America/Vancouver
          ports:
            - containerPort: 8989
              name: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: torrents
              mountPath: /data
              readOnly: true
            - name: tv
              mountPath: /tv
          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 8989
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            tcpSocket:
              port: 8989
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 30
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            - sh
            - -c
            - chown -R 1000:1000 /config && chmod -R 775 /config
          volumeMounts:
            - name: config
              mountPath: /config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: torrents
          persistentVolumeClaim:
            claimName: nfs-pvc-torrents
        - name: tv
          persistentVolumeClaim:
            claimName: nfs-pvc-tv
